version: 2.1
orbs:
  node: circleci/node@5.2.0
  aws-cli: circleci/aws-cli@4.1.2
  terraform: circleci/terraform@3.2.1

commands:
  aws-oidc-setup:
    description: Setup AWS auth using OIDC token
    parameters:
      aws-role-arn:
        type: string
    steps:
      - run:
          name: Get short-term credentials
          command: |
            #!/bin/bash
            STS=($(aws sts assume-role-with-web-identity --role-arn << parameters.aws-role-arn >> --role-session-name "${CIRCLE_BRANCH}-${CIRCLE_BUILD_NUM}" --web-identity-token "${CIRCLE_OIDC_TOKEN}" --duration-seconds 900 --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]' --output text))
            echo "export AWS_ACCESS_KEY_ID=${STS[0]}" >> $BASH_ENV
            echo "export AWS_SECRET_ACCESS_KEY=${STS[1]}" >> $BASH_ENV
            echo "export AWS_SESSION_TOKEN=${STS[2]}" >> $BASH_ENV
      - run:
          name: Verify AWS credentials
          command: aws sts get-caller-identity

jobs:
  unittest:
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Run tests
          command: npm test

  terraform_validation:
      executor: aws-cli/default
      steps:
        - checkout
        - aws-cli/install
        - aws-oidc-setup:
            aws-role-arn: "arn:aws:iam::$AWS_ACCOUNT_ID:role/OIDC_personal_website_resume"
        - terraform/install
        - terraform/init:
            backend_config: "bucket=$TERRAFORM_BACKEND_BUCKET,key=$TERRAFORM_BACKEND_BUCKET_KEY,dynamodb_table=$TERRAFORM_BACKEND_DYNAMODB_TABLE,region=$AWS_DEFAULT_REGION"
            path: terraform
        - terraform/validate:
            path: terraform
        - terraform/plan:
            backend_config: "bucket=$TERRAFORM_BACKEND_BUCKET,key=$TERRAFORM_BACKEND_BUCKET_KEY,dynamodb_table=$TERRAFORM_BACKEND_DYNAMODB_TABLE,region=$AWS_DEFAULT_REGION"
            path: terraform
        - terraform/apply:
            backend_config: "bucket=$TERRAFORM_BACKEND_BUCKET, key=$TERRAFORM_BACKEND_BUCKET_KEY, dynamodb_table=$TERRAFORM_BACKEND_DYNAMODB_TABLE, region=$AWS_DEFAULT_REGION"
            path: terraform

  terraform_apply:
      executor: aws-cli/default
      steps:
        - checkout
        - aws-cli/install
        - aws-oidc-setup:
            aws-role-arn: "arn:aws:iam::$AWS_ACCOUNT_ID:role/OIDC_personal_website_resume"
        - terraform/install
        - terraform/init:
            backend_config: "bucket=$TERRAFORM_BACKEND_BUCKET,key=$TERRAFORM_BACKEND_BUCKET_KEY,dynamodb_table=$TERRAFORM_BACKEND_DYNAMODB_TABLE,region=$AWS_DEFAULT_REGION"
            path: terraform
        - terraform/apply:
            backend_config: "bucket=$TERRAFORM_BACKEND_BUCKET, key=$TERRAFORM_BACKEND_BUCKET_KEY, dynamodb_table=$TERRAFORM_BACKEND_DYNAMODB_TABLE, region=$AWS_DEFAULT_REGION"
            path: terraform

  build:
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm run build
      - persist_to_workspace:
          root: ~/project
          paths: .

  deploy:
    executor: aws-cli/default
    steps:
      - attach_workspace:
          at: ~/project
      - aws-cli/install
      - aws-oidc-setup:
          aws-role-arn: "arn:aws:iam::$AWS_ACCOUNT_ID:role/OIDC_personal_website_resume"
      - run:
          name: Deploy to S3
          command: |
            aws s3 sync ~/project/build s3://resume.portefine.fr --delete
      - run:
          name: Invalidate CloudFront Distribution
          command: |
            aws cloudfront create-invalidation --distribution-id $AWS_DISTRIBUTION_ID --paths "/*"


workflows:
  version: 2.1
  test_build_deploy:
    jobs:
      - unittest
      - terraform_validation
      - terraform_apply:
          requires:
              - terraform_validation
          filters:
            branches:
              only:
                - main
      - build:
          requires:
            - unittest
      - deploy:
          requires:
            - build
          context:
            - fake-context
          filters:
            branches:
              only:
                - main
